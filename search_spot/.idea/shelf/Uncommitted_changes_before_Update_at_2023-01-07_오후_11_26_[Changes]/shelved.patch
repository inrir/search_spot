Index: app/src/main/java/com/ms/search_spot/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.ms.search_spot;\r\n\r\nimport android.content.Intent;\r\nimport android.content.pm.PackageInfo;\r\nimport android.content.pm.PackageManager;\r\nimport android.content.pm.Signature;\r\nimport android.os.Bundle;\r\nimport android.util.Base64;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.google.android.gms.common.GooglePlayServicesNotAvailableException;\r\nimport com.google.android.gms.common.GooglePlayServicesRepairableException;\r\nimport com.google.android.gms.location.places.Place;\r\nimport com.google.android.gms.location.places.ui.PlacePicker;\r\nimport com.google.android.gms.maps.model.LatLng;\r\nimport com.google.android.material.floatingactionbutton.FloatingActionButton;\r\n\r\nimport java.security.MessageDigest;\r\nimport java.security.NoSuchAlgorithmException;\r\nimport java.util.ArrayList;\r\n\r\npublic class MainActivity extends AppCompatActivity {\r\n    int num_of_place;\r\n    int PLACE_PICKER_REQUEST = 1;\r\n    PlacePicker.IntentBuilder builder;\r\n    FloatingActionButton fab;\r\n    Button fab2;\r\n    RecyclerView recyclerView;\r\n    ArrayList<LatLng> arr;\r\n    ArrayList<Item> arrayList;\r\n    RecyclerAdapter recyclerAdapter;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n        num_of_place = 1;\r\n\r\n        arr = new ArrayList<LatLng>();\r\n        // Adapter 생성\r\n\r\n        arrayList = new ArrayList<Item>();\r\n        recyclerAdapter = new RecyclerAdapter(getApplicationContext(), arrayList, R.layout.item_cardview);\r\n\r\n        // 리스트뷰 참조 및 Adapter달기\r\n        recyclerView = (RecyclerView) findViewById(R.id.recyclerview);\r\n        recyclerView.setAdapter(recyclerAdapter);\r\n        LinearLayoutManager layoutManager = new LinearLayoutManager(this);\r\n        recyclerView.setHasFixedSize(true);\r\n        recyclerView.setLayoutManager(layoutManager);\r\n\r\n\r\n        // 플로팅 버튼 이벤트 등록\r\n        fab = findViewById(R.id.fab);\r\n        fab.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                builder = new PlacePicker.IntentBuilder();\r\n                try {\r\n                    startActivityForResult(builder.build(MainActivity.this), PLACE_PICKER_REQUEST);\r\n                } catch (GooglePlayServicesRepairableException | GooglePlayServicesNotAvailableException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n        });\r\n\r\n        //어플리케이션을 실행하였을 떄 현재 위치를 나타내고 싶다면 아래 내용을 주석 해제.\r\n\r\n        /*\r\n        mPlaceDetectionClient = Places.getPlaceDetectionClient(this, null);\r\n        if (ContextCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED) {\r\n            ActivityCompat.requestPermissions( this, new String[] { Manifest.permission.ACCESS_FINE_LOCATION }, 2 );\r\n        }else{\r\n            Task<PlaceLikelihoodBufferResponse> placeResult = mPlaceDetectionClient.getCurrentPlace(null);\r\n            placeResult.addOnCompleteListener(new OnCompleteListener<PlaceLikelihoodBufferResponse>() {\r\n                @Override\r\n                public void onComplete(@NonNull Task<PlaceLikelihoodBufferResponse> task) {\r\n                    PlaceLikelihoodBufferResponse likelyPlaces = task.getResult();\r\n                    for (PlaceLikelihood placeLikelihood : likelyPlaces) {\r\n                        Log.i(\"Current Location\", String.format(\"Place '%s' has likelihood: %g\",\r\n                                placeLikelihood.getPlace().getName(),\r\n                                placeLikelihood.getLikelihood()));\r\n                    }\r\n                    @SuppressLint(\"RestrictedApi\") PlaceLikelihood placeLikelihood  = likelyPlaces.get(1);\r\n                    arr.add(placeLikelihood.getPlace().getLatLng());\r\n\r\n                    arrayList.add(new Item(\"https://maps.googleapis.com/maps/api/staticmap?center=\"+placeLikelihood.getPlace().getName().toString()+\"&zoom=15&scale=2&size=500x200&maptype=roadmap\\n\" +\r\n                            \"&markers=color:red%7Clabel:C%7C+\"+placeLikelihood.getPlace().getLatLng().latitude+\",\"+placeLikelihood.getPlace().getLatLng().longitude+\"\\n\" +\r\n                            \"&key=AIzaSyB30unzZlu2fRYVrYjfNnq3_TVH9s4g6zw\",placeLikelihood.getPlace().getName().toString(),placeLikelihood.getPlace().getAddress().toString(),0));\r\n                    recyclerAdapter.notifyDataSetChanged();\r\n                    adapter.addItem(ContextCompat.getDrawable(MainActivity.this, R.drawable.ic_face_black_24dp),\r\n                            \"나\", String.format(\"%s\\n%s\",placeLikelihood.getPlace().getAddress().toString(),placeLikelihood.getPlace().getName())) ;\r\n                    adapter.notifyDataSetChanged();\r\n\r\n                }\r\n            });\r\n        }*/\r\n\r\n        getAppKeyHash();\r\n        fab2 = findViewById(R.id.fab2);\r\n        fab2.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Intent intent = new Intent(MainActivity.this, FindLocationActivity.class);\r\n                intent.putExtra(\"arr\", arr);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    // +모양 추가버튼을 눌러서 친구를 추가하는 PlacePicker 엑티비티의 장소정보를 받아오는 부분\r\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        if (requestCode == PLACE_PICKER_REQUEST) {\r\n            if (resultCode == RESULT_OK) {\r\n                Place place = PlacePicker.getPlace(data, this);\r\n                arr.add(place.getLatLng());\r\n                //친구의 장소를 담은 arrayList에 Item객체를 만들어서 추가.\r\n                arrayList.add(new Item(\"https://maps.googleapis.com/maps/api/staticmap?center=\" + place.getName().toString() + \"&zoom=15&scale=2&size=500x200&maptype=roadmap\\n\" +\r\n                        \"&markers=color:red%7Clabel:C%7C+\" + place.getLatLng().latitude + \",\" + place.getLatLng().longitude + \"\\n\" +\r\n                        \"&key=AIzaSyB30unzZlu2fRYVrYjfNnq3_TVH9s4g6zw\", place.getName().toString(), place.getAddress().toString(), num_of_place));\r\n                num_of_place++;\r\n                recyclerAdapter.notifyDataSetChanged();\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    private void getAppKeyHash() {\r\n        PackageInfo packageInfo = null;\r\n        try {\r\n            packageInfo = getPackageManager().getPackageInfo(getPackageName(), PackageManager.GET_SIGNATURES);\r\n        } catch (PackageManager.NameNotFoundException e) {\r\n            e.printStackTrace();\r\n        }\r\n        if (packageInfo == null)\r\n            Log.e(\"KeyHash\", \"KeyHash:null\");\r\n\r\n        assert packageInfo != null;\r\n        for (Signature signature : packageInfo.signatures) {\r\n            try {\r\n                MessageDigest md = MessageDigest.getInstance(\"SHA\");\r\n                md.update(signature.toByteArray());\r\n                Log.d(\"KeyHash\", Base64.encodeToString(md.digest(), Base64.DEFAULT));\r\n            } catch (NoSuchAlgorithmException e) {\r\n                Log.e(\"KeyHash\", \"Unable to get MessageDigest. signature=\" + signature, e);\r\n            }\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/ms/search_spot/MainActivity.java b/app/src/main/java/com/ms/search_spot/MainActivity.java
--- a/app/src/main/java/com/ms/search_spot/MainActivity.java	(revision c09884bef6a284d6bfc628cd577228e1d2e6c37b)
+++ b/app/src/main/java/com/ms/search_spot/MainActivity.java	(date 1673094777051)
@@ -133,7 +133,7 @@
         }
     }
 
-    private void getAppKeyHash() {
+    private void getAppKeyHash() { // hash key 받는 거
         PackageInfo packageInfo = null;
         try {
             packageInfo = getPackageManager().getPackageInfo(getPackageName(), PackageManager.GET_SIGNATURES);
Index: build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// Top-level build file where you can add configuration options common to all sub-projects/modules.\r\n\r\nbuildscript {\r\n    repositories {\r\n        google()\r\n        jcenter()\r\n        mavenCentral()\r\n        maven { url \"https://maven.google.com\" }\r\n        maven { url 'https://devrepo.kakao.com/nexus/content/groups/public/'}\r\n    }\r\n    dependencies {\r\n        classpath 'com.android.tools.build:gradle:7.1.3'\r\n    }\r\n}\r\n\r\nallprojects {\r\n    repositories {\r\n        google()\r\n        jcenter()\r\n        maven { url 'https://devrepo.kakao.com/nexus/content/groups/public/'}\r\n    }\r\n}\r\n\r\ntask clean(type: Delete) {\r\n    delete rootProject.buildDir\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/build.gradle b/build.gradle
--- a/build.gradle	(revision c09884bef6a284d6bfc628cd577228e1d2e6c37b)
+++ b/build.gradle	(date 1673083194515)
@@ -9,7 +9,7 @@
         maven { url 'https://devrepo.kakao.com/nexus/content/groups/public/'}
     }
     dependencies {
-        classpath 'com.android.tools.build:gradle:7.1.3'
+        classpath 'com.android.tools.build:gradle:7.3.1'
     }
 }
 
